{"version":3,"sources":["meteor://ðŸ’»app/packages/peerlibrary_fs/packages/peerlibrary_fs.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uG","file":"/packages/peerlibrary_fs.js","sourcesContent":["(function () {\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                          //\n// packages/peerlibrary:fs/server.js                                                        //\n//                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                            //\nvar originalFs = Npm.require('fs');                                                         // 1\n                                                                                            // 2\nfs = _.clone(originalFs);                                                                   // 3\n                                                                                            // 4\nassert.ok(!fs._meteor);                                                                     // 5\n                                                                                            // 6\n// We set _meteor so that we can be sure and check we are getting our version of fs package // 7\nfs._meteor = true;                                                                          // 8\n                                                                                            // 9\n// We change all *Sync functions to fibers-enabled synchronous (blocking) ones              // 10\n_.each(fs, function (value, name, obj) {                                                    // 11\n  var nonSyncName = name.replace(/Sync$/, '');                                              // 12\n  if (name === nonSyncName || name === 'existsSync') {                                      // 13\n    return;                                                                                 // 14\n  }                                                                                         // 15\n  obj[name] = blocking(obj[nonSyncName]);                                                   // 16\n});                                                                                         // 17\n                                                                                            // 18\n// \"existsSync\" is a special case because \"exists\" has different signature                  // 19\nfs.existsSync = blocking(function (path, cb) {                                              // 20\n  fs.exists(path, function (exists) {                                                       // 21\n    cb(null, exists);                                                                       // 22\n  });                                                                                       // 23\n});                                                                                         // 24\n//////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/packages/peerlibrary_blocking/packages/peerlibrary_blocking.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0F","file":"/packages/peerlibrary_blocking.js","sourcesContent":["(function () {\n\n/////////////////////////////////////////////////////////////////////////////////\n//                                                                             //\n// packages/peerlibrary:blocking/server.js                                     //\n//                                                                             //\n/////////////////////////////////////////////////////////////////////////////////\n                                                                               //\n(function () {                                                                 // 1\n  // Inside blocking context functions should not be throwing exceptions but   // 2\n  // call callback with first argument an error. Exceptions will not propagate // 3\n  // and will only be printed to the console.                                  // 4\n  blocking = function (obj, fun) {                                             // 5\n    if (!fun) {                                                                // 6\n      fun = obj;                                                               // 7\n      obj = undefined;                                                         // 8\n    }                                                                          // 9\n\tvar wrapped;                                                                  // 10\n\tif (Meteor.wrapAsync) {                                                       // 11\n      wrapped = Meteor.wrapAsync(fun);                                         // 12\n    }                                                                          // 13\n\telse {                                                                        // 14\n      wrapped = Meteor._wrapAsync(fun);                                        // 15\n\t}                                                                             // 16\n    var f = function () {                                                      // 17\n      if (typeof obj === 'undefined') {                                        // 18\n        obj = this;                                                            // 19\n      }                                                                        // 20\n      return wrapped.apply(obj, arguments);                                    // 21\n    };                                                                         // 22\n    f._blocking = true;                                                        // 23\n    return f;                                                                  // 24\n  };                                                                           // 25\n})();                                                                          // 26\n                                                                               // 27\n/////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}